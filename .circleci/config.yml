version: 2.1

orbs:
  codacy: codacy/base@1.0.2

jobs:
  publish_circleci_artifacts:
    machine: true
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/
      - store_artifacts:
          path: ~/workdir/artifacts/

workflows:
  version: 2
  compile_test_deploy:
    jobs:
      - codacy/checkout_and_version:
          write_sbt_version: true
      - codacy/sbt:
          name: populate_cache
          persist_to_workspace: true
          cmd: sbt ";set scalafmtUseIvy in ThisBuild := false;update"
          requires:
            - codacy/checkout_and_version
      - codacy/sbt:
          name: check_fmt
          cmd: sbt ";scalafmt::test;test:scalafmt::test;sbt:scalafmt::test"
          requires:
            - populate_cache
      - codacy/sbt:
          name: compile
          persist_to_workspace: true
          cmd: sbt compile
          requires:
            - populate_cache
      - codacy/sbt:
          name: test_and_coverage
          cmd: |
            sbt ";coverage;test;coverageReport;coverageAggregate"

            if [ -z ${CODACY_PROJECT_TOKEN+x} ]; then
              echo "CODACY_PROJECT_TOKEN not found. Skipping send coverage to Codacy."
            else
              sbt "codacyCoverage"
            fi
          requires:
            - compile
      - codacy/sbt:
          name: publish
          persist_to_workspace: true
          cmd: |
            sbt "graalvm-native-image:packageBin"

            mkdir -p ~/workdir/artifacts/
            mv target/graalvm-native-image ~/workdir/artifacts/target/codacy-clang-tidy-$(cat .version)
          requires:
            - check_fmt
            - test_and_coverage
          filters:
            branches:
              only:
                - master
#      - codacy/sbt:
#          name: publish
#          cmd: |
#            sbt ";clean;retrieveGPGKeys;publishSigned;sonatypeRelease"
#
#            ./scripts/publish-native.sh -n codacy-coverage-reporter -m com.codacy.CodacyCoverageReporter -t docker $(cat .version)
#
#            mkdir -p ~/workdir/artifacts/
#            mv codacy-coverage-reporter-linux-$(cat .version) ~/workdir/artifacts/
#            mv ~/workdir/target/codacy-coverage-reporter-assembly-$(cat .version).jar ~/workdir/artifacts/
#          persist_to_workspace: true
#          requires:
#            - check_fmt
#            - test_and_coverage
#          context: CodacyAWS
#          filters:
#            branches:
#              only:
#                - master
      - publish_circleci_artifacts:
          requires:
            - publish
#      #TODO: Add bintray orb
#      - codacy/shell:
#          name: publish_bintray
#          cmd: |
#            curl -T ~/workdir/artifacts/codacy-coverage-reporter-linux-$(cat .version) -ucodacy-ci:$BINTRAY_API_KEY -H "X-Bintray-Package:codacy-coverage-reporter" -H "X-Bintray-Version:$(cat .version)" https://api.bintray.com/content/codacy/Binaries/$(cat .version)/codacy-coverage-reporter-linux
#            curl -T ~/workdir/artifacts/codacy-coverage-reporter-assembly-$(cat .version).jar -ucodacy-ci:$BINTRAY_API_KEY -H "X-Bintray-Package:codacy-coverage-reporter" -H "X-Bintray-Version:$(cat .version)" https://api.bintray.com/content/codacy/Binaries/$(cat .version)/codacy-coverage-reporter-assembly.jar
#            curl -X POST -ucodacy-ci:$BINTRAY_API_KEY https://api.bintray.com/content/codacy/Binaries/codacy-coverage-reporter/$(cat .version)/publish
#          filters:
#            branches:
#              only:
#                - master
#          context: CodacyBintray
#          requires:
#            - publish
      - codacy/publish_ghr:
          name: publish_ghr
          path: ~/workdir/artifacts/
          filters:
            branches:
              only:
                - master
          context: CodacyGitHub
          requires:
            - publish